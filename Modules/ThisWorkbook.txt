VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "ThisWorkbook"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True



Sub populateJobHeaders(jobNum As String, routine As Variant, customer As String, machine As String, partNum As String, rev As String, partDesc As String)
    With Worksheets("PAGE 1")
        .Unprotect Password:="3063bqa"
        
        .Range("C1").Value = jobNum
        .Range("C2").Value = routine
        .Range("C3").Value = customer
        .Range("C4").Value = machine
        .Range("G3").Value = partNum
        .Range("I3").Value = rev
        .Range("G4").Value = partDesc
        
        
        .protect Password:="3063bqa", AllowFormattingCells:=True
    
    
    End With

End Sub

Public Sub populateReport(featureInfo() As Variant, featureMeasurements() As Variant, featureTraceability() As Variant)

    If (Not featureInfo) = -1 Or (Not featureMeasurements) = -1 Then Exit Sub
    
    Application.ScreenUpdating = False
    
    Call Cleanup
    
    Dim applicablePages As Integer
    applicablePages = Application.WorksheetFunction.Floor(UBound(featureInfo, 2) / 8, 1) + 1
    
    For i = 1 To applicablePages
        ThisWorkbook.Worksheets("PAGE " & i).Unprotect Password:="3063bqa"
        ThisWorkbook.Worksheets("PAGE " & i).Visible = True
    Next i
    
    Call populateHeaderFeatureInfo(featureInfo:=featureInfo)
    Call populateFeatureMeasuredValues(featureMeasurements:=featureMeasurements)
    Call populateTraceabilityInfo(featureTraceabilityInfo:=featureTraceability, pages:=applicablePages)
    
    'TODO: this sub should reference the status of the toggle button to determine whether or not we should call this function
    If Not RibbonCommands.toggShowAllObs Then Call RemoveFailedObservations(applicablePages:=applicablePages)
    
    
    
    For i = 1 To applicablePages
        ThisWorkbook.Worksheets("PAGE " & i).protect Password:="3063bqa"
    Next i

    Application.ScreenUpdating = True

End Sub

Private Sub populateHeaderFeatureInfo(featureInfo() As Variant)
    
    For i = 0 To UBound(featureInfo, 2)
            Dim activePageNum As Integer
            activePageNum = Application.WorksheetFunction.Floor(i / 8, 1) + 1
            
            With ThisWorkbook.Worksheets("PAGE " & activePageNum)
                Dim colLetter As String
                colLetter = GetAddress((i Mod 8) + 5)
                
                'TODO: This should be formatted
                .Range(colLetter & "9").Value = featureInfo(0, i) 'Balloon
                .Range(colLetter & "10").Value = featureInfo(1, i) 'Description
                
                If featureInfo(6, i) = "Variable" Then
                    .Range(colLetter & "16").Value = featureInfo(2, i) 'LTol
                    .Range(colLetter & "17").Value = featureInfo(3, i) 'Target
                    .Range(colLetter & "18").Value = featureInfo(4, i) 'UTol
                Else
                    .Range(colLetter & "16").Value = "N/A" 'LTol
                    .Range(colLetter & "17").Value = "N/A" 'Target
                    .Range(colLetter & "18").Value = "N/A" 'UTol
                
                End If
                
                .Range(colLetter & "19").Value = featureInfo(5, i) 'Gauge
                .Range(colLetter & "8").Value = featureInfo(6, i) 'Variable / Attribute
            End With
    
    Next i
    
End Sub

Private Sub populateFeatureMeasuredValues(featureMeasurements() As Variant)
    
    For i = 0 To UBound(featureMeasurements, 1)
            If i = 0 Then GoTo NextIteration
            Dim activePageNum As Integer
            activePageNum = Application.WorksheetFunction.Floor((i - 1) / 8, 1) + 1

            With ThisWorkbook.Worksheets("PAGE " & activePageNum)
                Dim colLetter As String
                colLetter = GetAddress(((i - 1) Mod 8) + 5)
                
                For j = 0 To UBound(featureMeasurements, 2)
                    'We store a hidden value for Attribute/Variable in the 8th row
                    'If the returned value on an attribute dimension is 1, then it is a failure
                    If .Range(colLetter & "8").Value = "Attribute" Then
                        If featureMeasurements(i, j) = 0 Then
                            .Range(colLetter & (j + 22)).Value = "Pass"
                        Else
                            .Range(colLetter & (j + 22)).Value = "Fail"
                        End If
                    Else
                        'Otherwise its variable, just set the value
                        .Range(colLetter & (j + 22)).Value = featureMeasurements(i, j)
                    End If
                Next j

            End With

NextIteration:
    Next i

End Sub

Private Sub populateTraceabilityInfo(featureTraceabilityInfo() As Variant, pages As Integer)

    'featureTraceabilityInfo(0,j) -> Date
    'featureTraceabilityInfo(1,j) -> EmployeeID
    'featureTraceabilityInfo(2,j) -> Observation Number
    'featureTraceabilityInfo(3,j) -> "Pass" / "Fail"

    For i = 1 To pages
        With ThisWorkbook.Worksheets("PAGE " & i)
            For j = 0 To UBound(featureTraceabilityInfo, 2)
                'TODO: something here about setting the text red if the feature is "FAIL"
                .Range("A" & j + 22).Value = featureTraceabilityInfo(0, j)
                .Range("C" & j + 22).Value = featureTraceabilityInfo(1, j)
                
                'We don't always get a value for the employeeID. So if the value we found is Null, then
                'set it to the value of the cell that we found above.
                'This works because we always have an employeeID for at least the first observation.
                If IsNull(featureTraceabilityInfo(1, j)) Then
                    .Range("C" & j + 22).Value = .Range("C" & j + 21).Value
                Else
                    .Range("C" & j + 22).Value = featureTraceabilityInfo(1, j)
                End If
                
                'If we detected a failure, set the background as red to indicate that
                'we'll use this later to conditionally remove inspections if we don't have ShowAllObservations Toggled
                If featureTraceabilityInfo(3, j) = "Fail" Then
                    .Range("A" & j + 22 & ":" & "C" & j + 22).Interior.Color = RGB(255, 102, 102)
                    .Range("E" & j + 22 & ":" & "L" & j + 22).Interior.Color = RGB(255, 102, 102)
                
                End If
                
            Next j
        End With
    
    
    Next i



End Sub


Private Sub Cleanup()

    For i = 1 To 20
        With ThisWorkbook.Worksheets("PAGE " & i)
            If .Visible = True Then
                .Activate
                .Unprotect Password:="3063bqa"
            
                'Clean Data/Employee Information
                With Range("A22:C121")
                    .Value = ""
                    .Interior.Color = RGB(255, 255, 255)
                    .Font.Color = RGB(0, 0, 0)
                End With
                
                With Range("E22:L121")
                    .Value = ""
                    .Interior.Color = RGB(255, 255, 255)
                    .Font.Color = RGB(0, 0, 0)
                End With
                
                With Range("E8:L19")
                    .Value = ""
                    .Interior.Color = RGB(255, 255, 255)
                    .Font.Color = RGB(0, 0, 0)
                End With
                
                .protect Password:="3063bqa"
                
                If .Name <> "PAGE 1" Then
                    .Visible = False
                End If
            End If
            
        End With
    Next i
    
    ThisWorkbook.Worksheets("PAGE 1").Activate
    
    

End Sub





Function GetAddress(column As Long) As String
    Dim vArr
    vArr = Split(Cells(1, column).Address(True, False), "$")
    GetAddress = vArr(0)

End Function


'Open/Close the pages for verification
Sub settingTheFormat()
    Dim ws As Worksheet
    For Each ws In ThisWorkbook.Worksheets
        If ws.Name <> "PAGE 1" Then
            ws.Visible = False
            ws.protect Password:="3063bqa"
    
        End If
        
    Next ws

End Sub


Private Sub RemoveFailedObservations(applicablePages As Integer)
    For i = 1 To applicablePages
        With ThisWorkbook.Worksheets("PAGE " & i)
            
            Dim initRow As Integer
            initRow = 22
        
ResetLoop:
            For Each cell In .Range("A" & initRow & ":C121")
                If Not (cell.Interior.Color = vbWhite) Then
                    initRow = cell.Row
                    If cell.Offset(1, 0).Value = vbNullString Then
                    
                        'If the last row is a fail, set to "" and change the interior to ColorIndex 0, (vbWhite changes the borders on us)
                        With .Range("A" & initRow & ":" & "C" & initRow)
                            .Value = ""
                            .Interior.ColorIndex = 0
                        End With
                        With .Range("E" & initRow & ":" & "L" & initRow)
                            .Value = ""
                            .Interior.ColorIndex = 0
                        End With
                    Else
                        
                        'Otherwise we Move up the Cells below
                        'Traceability Cells
                        Dim endRow As Integer
                        endRow = .Range("A" & cell.Row).End(xlDown).Row
                        
                        
                        .Range("A" & initRow & ":B" & endRow).UnMerge
                        .Range("A" & initRow + 1 & ":C" & endRow).Copy Destination:=.Range("A" & initRow)
                        .Range("A" & endRow & ":C" & endRow).Value = ""
                        .Range("A" & initRow & ":B" & endRow).Merge Across:=True
                        
                        
                        'Measurement Cells
                        .Range("E" & initRow + 1 & ":L" & endRow).Copy Destination:=.Range("E" & initRow)
                        .Range("E" & endRow & ":L" & endRow).Value = ""
                        GoTo ResetLoop
                    End If
                    
                End If
            
            Next cell
        End With
    Next i

End Sub



